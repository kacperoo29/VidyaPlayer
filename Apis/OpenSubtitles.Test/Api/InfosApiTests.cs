/*
 * OpenSubtitles API
 *
 * Explore subtitles API here
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@opensubtitles.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using OpenSubtitles.Client;
using OpenSubtitles.Api;
using OpenSubtitles.Model;

namespace OpenSubtitles.Test
{
    /// <summary>
    ///  Class for testing InfosApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class InfosApiTests
    {
        private InfosApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new InfosApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InfosApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' InfosApi
            //Assert.IsInstanceOf(typeof(InfosApi), instance);
        }

        
        /// <summary>
        /// Test Formats
        /// </summary>
        [Test]
        public void FormatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Formats();
            //Assert.IsInstanceOf(typeof(InlineResponse2001), response, "response is InlineResponse2001");
        }
        
        /// <summary>
        /// Test Languages
        /// </summary>
        [Test]
        public void LanguagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Languages();
            //Assert.IsInstanceOf(typeof(InlineResponse2002), response, "response is InlineResponse2002");
        }
        
        /// <summary>
        /// Test Userinfo
        /// </summary>
        [Test]
        public void UserinfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.Userinfo();
            //Assert.IsInstanceOf(typeof(InlineResponse2003), response, "response is InlineResponse2003");
        }
        
    }

}
